This is my latest format, if you wish to convert an animation for my yamato project, use the one below instead!
https://github.com/dstmnaki/yamato-starfall/blob/main/blender%20animating%20test/blender%20plugins/yamato%20animation%20converter%20for%20starfall/yamato%20animation%20converter.py

Now, introduction

Here's my finalized blender to starfall animation and bone/rig converter, i have done some testing and so far it seems that this works fine as well, i also noticed that the origin of my yamato project's rig was rotated 90 degrees forward by default, one couldn't even see it, but it was still there code wise, that cause the ported animations to point upwards, so i had to add a -90 offset when exporting, that should not be the case with this if your armature is pointing the right direction

You should be able to port anything with this as long as parent chains do not exceed 16, that is a source engine limit which starfall enforces, anything beyond 16 when moved can crash servers, so keep that in mind, i haven't made a way of baking animations into "groups" that divide the armature based on parent count, but if i figure that out one day, i'll update this code

Located in 2 places, '3D View > Object > Export Starfall Anim / Armature Properties'

Goes together with my holo loader and animation framework

https://github.com/dstmnaki/yamato-starfall/blob/main/nakilibs/pac_to_holo_loader.txt
https://github.com/dstmnaki/starfall-projects/blob/main/Nakilibs/animation_framework.txt

------------------------------
Animation framework usage
------------------------------

local Animations={}
local Anim_Name = "Test Animation"
Animations[Anim_Name]={Anim_Name,ANIMATION_TABLE_VARIABLE}


local function onFrame(frame)
    --print("Frame:", frame)
end

local function animation_finished()
    --print("Animation finished!")
end

local is_looping = false
local animation_rate = 1

hook.add("think","animation_stuff",function()
    if pthl.ready then
        local bones_in = bones
        local anim_name = "Test Animation"
        nakilibs.start_animation(size, bones_in, Animations[anim_name][1], Animations[anim_name][2], is_looping, animation_rate,
            function(frame) onFrame(frame) end,
            function() animation_finished() end
        )
        hook.remove("think","animation_stuff")
    end
end)

------------------------------

I'll post a youtube video on how to use this soon
